%[kind : unitTest]
%[file : cretab_%%(self.obName.lower())%%.sqlite]
%[path : database]
/*
 * Lancer la commande suivante pour insérer les données
 * cat cretab_%%(self.obName.lower())%%.sqlite | sqlite3 test_database.sdb
 */
 
CREATE TABLE %%(self.dbTableName)%% (
%%content = ""
allAttributesCode = ""

for field in self.fields:
	if allAttributesCode != "":
		allAttributesCode += ", \n"

	typeForSQL = field.sqlType

	if field.sqlType.upper()[0:3] == "INT":
		typeForSQL = "integer"
	if field.sqlType.upper()[0:4] == "FLAG":
		typeForSQL = "char(1)"
	if field.sqlType.upper()[0:5] == "COLOR":
		typeForSQL = "char(7)"
	if field.sqlType.upper()[0:4] == "DATE":
		typeForSQL = "date"
	elif field.sqlType.upper()[0:8] == "PASSWORD":
		typeForSQL = "varchar" + field.sqlType[8:]
	elif field.sqlType.upper()[0:4] == "ENUM":
		typeForSQL = "ENUM(" 
		enumTypes = field.sqlType[5:-1]
		for enum in enumTypes.split(','):
			valueAndText = enum.replace('"','').replace("'","").split(':')
			typeForSQL += """"%(value)s",""" % {'value': valueAndText[0].strip()}
		typeForSQL = typeForSQL[:-1]
		typeForSQL += ")"

	elif field.sqlType.upper() == "FILE":
		typeForSQL = "varchar(4000)" 

	attributeCode = "\t%(dbName)s %(sqlType)s " % { 'dbName' : field.dbName,
	  'sqlType' : typeForSQL
	}
	if not field.nullable:
		attributeCode += "NOT NULL "
	if field in self.keyFields:
		attributeCode += "PRIMARY KEY "
	if field.autoincrement:
		attributeCode += "AUTOINCREMENT "
	allAttributesCode += attributeCode

content += allAttributesCode + """
);"""

RETURN = content
%%



